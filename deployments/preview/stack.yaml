services:
  preview:
    depends_on:
      - reverse-proxy
    deploy:
      replicas: 1
      update_config:
        order: start-first
    environment:
      DOTENV: /run/secrets/preview-secret
      NEXT_PUBLIC_SKIP_MUMTAZ_LOGIN: 'true'
    hostname: '{{.Node.Hostname}}'
    image: ${IMAGE}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.mh-production.entrypoints: websecure
      traefik.http.routers.mh-production.rule: Host(`preview.khutwah.id`) || Host(`pre.khutwah.id`)
      traefik.http.routers.mh-production.tls.certresolver: acmeresolver
    secrets:
      - source: preview-secret
  reverse-proxy:
    command:
      - --log.level=INFO
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.acmeresolver.acme.tlschallenge=true
      - --certificatesresolvers.acmeresolver.acme.email=khutwah-production@rockybars.com
      - --certificatesresolvers.acmeresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
    hostname: '{{.Node.Hostname}}'
    image: traefik:v3.2
    ports:
      - mode: ingress
        target: 80
        published: 80
        protocol: tcp
      - mode: ingress
        target: 443
        published: 443
        protocol: tcp
    volumes:
      - type: volume
        source: letsencrypt
        target: /letsencrypt
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
volumes:
  letsencrypt: {}
secrets:
  preview-secret:
    name: preview-secret
    external: true
