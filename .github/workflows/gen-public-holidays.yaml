name: Generate Public Holiday

on:
  schedule:
    - cron: '0 15 31 12 *' # Runs at 10:00 PM JKT (UTC+7), which is 3:00 PM UTC
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  generate-holiday-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install

      - name: Get the upcoming year
        id: get-year
        run: |
          # Get the current year and calculate the upcoming year
          current_year=$(date +'%Y')
          upcoming_year=$((current_year + 1))
          echo "Upcoming Year: $upcoming_year"
          echo "::set-output name=year::$upcoming_year"

      - name: Fetch Public Holidays API
        id: fetch-holidays
        run: |
          # Use the dynamically calculated upcoming year
          curl -s "https://api-harilibur.vercel.app/api?year=${{ steps.get-year.outputs.year }}" -o holidays.json

      - name: Filter and Convert Holidays Data
        id: filter-holidays
        run: |
          # Parse and filter holidays where 'is_national_holiday' is true
          node -e "
            const fs = require('fs');
            const holidays = require('./holidays.json');
            
            // Filter national holidays
            const nationalHolidays = holidays.filter(holiday => holiday.is_national_holiday);

            // Map to the desired format (ISO date format)
            const result = nationalHolidays.reduce((acc, holiday) => {
              const date = new Date(holiday.holiday_date);
              
              // Data from API is GMT+7, need to convert to UTC by subtracting 7 hours
              const utcDate = new Date(date.getTime() - (7 * 60 * 60 * 1000));

              const isoDate = utcDate.toISOString();
              acc[isoDate] = holiday.holiday_name;
              return acc;
            }, {});

            // Output result
            console.log(JSON.stringify(result, null, 2));
            
            // Save the result to 'data/holidays/public.json' (overwrite if exists)
            fs.mkdirSync('data/holidays', { recursive: true });
            fs.writeFileSync('data/holidays/public.json', JSON.stringify(result, null, 2));
          "

      - name: Commit changes to new branch
        run: |
          # Create a new branch for the holiday update
          git checkout -b "feat/update-public-holidays-${{ steps.get-year.outputs.year }}"

          # Stage the changes
          git add data/holidays/public.json

          # Commit the changes
          git commit -m "feat: update public holidays for ${{ steps.get-year.outputs.year }}"

      - name: Push new branch
        run: |
          git push --set-upstream origin "feat/update-public-holidays-${{ steps.get-year.outputs.year }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          delete-branch: true
          title: 'Update public holidays for ${{ steps.get-year.outputs.year }}'
          body: |
            This PR updates the public holidays for the upcoming year.
          base: main
          branch: 'feat/update-public-holidays-${{ steps.get-year.outputs.year }}'
          draft: false
